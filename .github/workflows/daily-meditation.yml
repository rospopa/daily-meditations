name: Daily Meditation SMS

on:
  schedule:
    # Runs at 8:00 AM UTC (adjust as needed)
    - cron: '0 8 * * *'
  workflow_dispatch:  # Allows manual triggering

# Set default permissions for the workflow
permissions:
  contents: write  # Required to push changes

jobs:
  send-meditation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches
          token: ${{ secrets.GITHUB_TOKEN }}  # Use the GITHUB_TOKEN for authentication
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: 'latest'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium webdriver-manager
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb libxi6 libgbm1 wget unzip
          
      - name: Run daily meditation script
        env:
          GVOICE_EMAIL: ${{ secrets.GVOICE_EMAIL }}
          GVOICE_PASSWORD: ${{ secrets.GVOICE_PASSWORD }}
          GVOICE_NUMBER: ${{ secrets.GVOICE_NUMBER }}
          RECIPIENTS: ${{ secrets.RECIPIENTS }}
        run: |
          set -e  # Exit immediately if a command exits with a non-zero status
          
          # Create debug directory
          mkdir -p debug_logs
          
          # Function to collect debug info
          collect_debug_info() {
            echo "=== DEBUG INFO ==="
            echo "Current directory: $(pwd)"
            echo "Files in current directory:"
            ls -la
            echo "\n=== CHROME VERSION ==="
            google-chrome --version || echo "Chrome not found"
            echo "\n=== CHROMEDRIVER VERSION ==="
            chromedriver --version || echo "Chromedriver not found"
            echo "\n=== PYTHON VERSION ==="
            python --version
            echo "\n=== SELENIUM VERSION ==="
            python -c "import selenium; print(selenium.__version__)" || echo "Selenium not found"
          }
          
          # Save debug info
          collect_debug_info > debug_logs/environment_info.txt
          
          # Debug: Print environment variables (without sensitive data)
