name: Daily Meditation SMS

on:
  schedule:
    # Runs at 8:00 AM UTC (adjust as needed)
    - cron: '0 8 * * *'
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: read

jobs:
  send-meditation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: 'latest'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium webdriver-manager
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb libxi6 libgbm1 wget unzip
          
      - name: Run daily meditation script
        env:
          GVOICE_EMAIL: ${{ secrets.GVOICE_EMAIL }}
          GVOICE_PASSWORD: ${{ secrets.GVOICE_PASSWORD }}
          GVOICE_NUMBER: ${{ secrets.GVOICE_NUMBER }}
          RECIPIENTS: ${{ secrets.RECIPIENTS }}
        run: |
          set -e  # Exit immediately if a command exits with a non-zero status
          
          # Create debug directory
          mkdir -p debug_logs
          
          # Function to collect debug info
          collect_debug_info() {
            echo "=== DEBUG INFO ==="
            echo "Current directory: $(pwd)"
            echo "Files in current directory:"
            ls -la
            echo "\n=== CHROME VERSION ==="
            google-chrome --version || echo "Chrome not found"
            echo "\n=== CHROMEDRIVER VERSION ==="
            chromedriver --version || echo "Chromedriver not found"
            echo "\n=== PYTHON VERSION ==="
            python --version
            echo "\n=== SELENIUM VERSION ==="
            python -c "import selenium; print(selenium.__version__)" || echo "Selenium not found"
          }
          
          # Save debug info
          collect_debug_info > debug_logs/environment_info.txt
          
          # Create config.json with proper JSON formatting
          echo '{
            "gvoice": {
              "email": "'"$GVOICE_EMAIL"'",
              "password": "'"$GVOICE_PASSWORD"'",
              "number": "'"$GVOICE_NUMBER"'"
            },
            "recipients": "'"$RECIPIENTS"'".split(","),
            "history_size": 7,
            "history": []
          }' > config.json
          
          # Set up virtual display with larger screen size
          export DISPLAY=:99
          Xvfb :99 -screen 0 1920x1080x24 > xvfb.log 2>&1 &
          
          # Run the script with output logging
          echo "Starting script..."
          set +e  # Don't exit on error so we can collect artifacts
          python daily_meditation.py 2>&1 | tee debug_logs/script_output.log
          SCRIPT_EXIT_CODE=${PIPESTATUS[0]}
          
          # Collect any screenshots or debug files
          mkdir -p screenshots
          mv *.png screenshots/ 2>/dev/null || true
          mv *.html debug_logs/ 2>/dev/null || true
          
          # Save Xvfb logs
          if [ -f xvfb.log ]; then
            mv xvfb.log debug_logs/
          fi
          
          # Upload debug artifacts
          echo "Uploading debug artifacts..."
          
          # Exit with the script's exit code
          exit $SCRIPT_EXIT_CODE
          
      - name: Upload debug artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: debug-artifacts
          path: |
            debug_logs/
            screenshots/
          retention-days: 7
          
      - name: Commit and push changes
        run: |
          git add config.json
          git diff --quiet && git diff --staged --quiet || \
          (git commit -m "Update meditation history [skip ci]" && \
           git push)
